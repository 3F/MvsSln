
<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <Version>2.5.1</Version>
    <BuildInfoVSSBE></BuildInfoVSSBE>
  </PropertyGroup>

  <PropertyGroup>
    <TargetFrameworks>net40;net472;netstandard2.0;netcoreapp2.1</TargetFrameworks>
    <RootNamespace>net.r_eg.MvsSln</RootNamespace>
    <AssemblyName>MvsSln</AssemblyName>
    <SignAssembly>true</SignAssembly>
    <AssemblyOriginatorKeyFile>key.snk</AssemblyOriginatorKeyFile>
    <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
    <Copyright>Copyright (c) 2013-2020  Denis Kuzmin &lt; x-3F@outlook.com &gt; GitHub/3F</Copyright>
    <Title>[ MvsSln ] Customizable VisualStudio .sln parser, projects, r/w handlers at runtime</Title>
    <PackageIcon>MvsSln_v1_96px.png</PackageIcon>
    <IconUrl>https://raw.githubusercontent.com/3F/MvsSln/master/MvsSln/Resources/MvsSln_v1_96px.png</IconUrl>
    <Description>
        Customizable VisualStudio .sln parser, Complex support of the projects (.vcxproj, .csproj., …), Pluginable lightweight r/w handlers at runtime, and more …

        1. 🌌 We're providing most convenient work with projects, their dependencies, their lazy loading, any folders, any items, references, and lot of other important things.
        2. 💡 We're customizable and extensible library at runtime. Make [your custom] .sln for everything!
        3. 🚀 We were born from other popular project to be more loyal for your preferences on the fly. Hello from 2013.

        Easily control all your projects data (Reference, ProjectReference, Properties, Import sections, ...).
        Or even create your custom sln parsing of anything in a few steps.

        Specially extracted and re-licensed from vsSolutionBuildEvent projects (LGPLv3 -&gt; MIT)
        for https://github.com/3F/DllExport and others!

        Enjoy with us. 🎈
        _ _ _ _ _ _
        Source code and all details here: https://github.com/3F/MvsSln

    =======================================
    gnt /p:ngpackages="MvsSln/$(Version)"
    ================== https://github.com/3F/GetNuTool

    Build info:

    $(BuildInfoVSSBE)
    </Description>
    <PackageOwners>reg</PackageOwners>
    <PackageProjectUrl>https://github.com/3F/MvsSln</PackageProjectUrl>
    <RepositoryUrl>https://github.com/3F/MvsSln</RepositoryUrl>
    <RepositoryType>git</RepositoryType>
    <PackageTags>sln visualstudio parser sln-parser projects sln-files csproj vcxproj visual-studio VS2019 VS2017 VS2015 VS2013 VS2012 VS2010 msbuild GetNuTool hMSBuild MvsSln</PackageTags>
    <PackageReleaseNotes> changelog: https://github.com/3F/MvsSln/blob/master/changelog.txt </PackageReleaseNotes>
    <Authors>github.com/3F/MvsSln</Authors>
    <DocumentationFile>$(OutputPath)$(AssemblyName).xml</DocumentationFile>
    <PackageLicenseFile>License.txt</PackageLicenseFile>
    <Configurations>Debug;Release;PublicRelease</Configurations>
    <NoWarn>1701;1702;CS1591</NoWarn>
    <LangVersion>latest</LangVersion>
    <PackageIconUrl>https://raw.githubusercontent.com/3F/MvsSln/master/MvsSln/Resources/MvsSln_v1_96px.png</PackageIconUrl>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Release' Or '$(Configuration)' == 'PublicRelease' ">
    <DefineConstants />
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
  </PropertyGroup>

  <ItemGroup>
    <None Include="..\License.txt" Pack="true" PackagePath="" />
    <None Include="..\3rd-party.txt" Pack="true" PackagePath="" />
    <None Include="..\Readme.md" Pack="true" PackagePath="" />
    <None Include="..\changelog.txt" Pack="true" PackagePath="" />
    <None Include="..\.version" Pack="true" PackagePath="" />
    <!-- NuGet bug when naming with 'build' keyword: https://github.com/NuGet/Home/issues/8810 -->
    <None Include="obj\release-info.txt" Condition="Exists('obj\release-info.txt')" Pack="true" PackagePath="" />
    <None Include="Resources/MvsSln_v1_96px.png" Pack="true" PackagePath="" />
  </ItemGroup>

  <ItemGroup>
    <None Include="..\tools\hMSBuild.bat">
      <Visible>false</Visible>
      <Pack>True</Pack>
      <PackagePath>tools\</PackagePath>
    </None>
    <None Include="..\tools\gnt.bat">
      <Visible>false</Visible>
      <Pack>True</Pack>
      <PackagePath>tools\</PackagePath>
    </None>
  </ItemGroup>

  <!-- GAC -->
  <ItemGroup Condition=" '$(TargetFramework)' == 'net40' Or '$(TargetFramework)' == 'net472' ">
    <Reference Include="Microsoft.CSharp" />
    <Reference Include="Microsoft.Build" />
  </ItemGroup>

  <ItemGroup Condition=" '$(TargetFramework)' == 'netstandard2.0' Or '$(TargetFramework)' == 'netcoreapp2.1' ">
    <PackageReference Include="Microsoft.CSharp" Version="4.6.0" />
  </ItemGroup>

  <ItemGroup>
    <!-- Microsoft.Build -->
    <PackageReference Version="16.3.0" Condition=" 'netcoreapp2.1' == '$(TargetFramework)' " Include="Microsoft.Build" />
    <PackageReference Version="15.9.20" Condition=" 'netstandard2.0' == '$(TargetFramework)' " Include="Microsoft.Build" />

    <!-- https://github.com/3F/MvsSln/wiki/Advanced-Features#how-to-use-modern-versions-of-msbuild-for-netfx -->
    <!-- <PackageReference Version="16.3.0" Condition=" 'net472' == '$(TargetFramework)' " Include="Microsoft.Build" /> -->
    <!-- <PackageReference Version="15.9.20" Condition=" 'net46' == '$(TargetFramework)' " Include="Microsoft.Build" /> -->
  </ItemGroup>

</Project>